{
	"info": {
		"_postman_id": "f2b50cf0-d347-4e33-935f-21bfe1e5b238",
		"name": "Summit Finder",
		"description": "Postman collection that covers the APIs of Summit Finder.\n\nSummit Finder is a Service Design and Engineering project.\n\nUniversity of Trento.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3602606"
	},
	"item": [
		{
			"name": "Nominatim Adapter",
			"item": [
				{
					"name": "Status check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{nominatim_port}}/nominatim",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{nominatim_port}}",
							"path": [
								"nominatim"
							]
						}
					},
					"response": []
				},
				{
					"name": "Geocode a place",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{nominatim_port}}/nominatim/:place",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{nominatim_port}}",
							"path": [
								"nominatim",
								":place"
							],
							"variable": [
								{
									"key": "place",
									"value": "feltre"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Adapter for Nominatim external service."
		},
		{
			"name": "OpenWeather Adapter",
			"item": [
				{
					"name": "Get current weather for lat and lon",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{openweather_port}}/openweather/weather?lat=46.06&lon=11.72",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{openweather_port}}",
							"path": [
								"openweather",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "46.06"
								},
								{
									"key": "lon",
									"value": "11.72"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get 5 days forecast for lat and lon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if there is 40 forecasts\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.forecast.length).to.eql(40);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{openweather_port}}/openweather/forecast?lat=46.06&lon=11.72",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{openweather_port}}",
							"path": [
								"openweather",
								"forecast"
							],
							"query": [
								{
									"key": "lat",
									"value": "46.06"
								},
								{
									"key": "lon",
									"value": "11.72"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Adapter for OpenWeatherMap external service."
		},
		{
			"name": "Overpass Adapter",
			"item": [
				{
					"name": "Status check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{overpass_port}}/overpass",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{overpass_port}}",
							"path": [
								"overpass"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find peaks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{overpass_port}}/overpass/peaks?lat=46.28&lon=12.07&range=4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{overpass_port}}",
							"path": [
								"overpass",
								"peaks"
							],
							"query": [
								{
									"key": "lat",
									"value": "46.28"
								},
								{
									"key": "lon",
									"value": "12.07"
								},
								{
									"key": "range",
									"value": "4000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find huts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{overpass_port}}/overpass/huts?lat=46.28&lon=12.07&range=10000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{overpass_port}}",
							"path": [
								"overpass",
								"huts"
							],
							"query": [
								{
									"key": "lat",
									"value": "46.28"
								},
								{
									"key": "lon",
									"value": "12.07"
								},
								{
									"key": "range",
									"value": "10000"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Adapter for Overpass external service."
		},
		{
			"name": "Elevation Adapter",
			"item": [
				{
					"name": "Find elevation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{elevation_port}}/elevation?lat=46.48&lon=12.05",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{elevation_port}}",
							"path": [
								"elevation"
							],
							"query": [
								{
									"key": "lat",
									"value": "46.48"
								},
								{
									"key": "lon",
									"value": "12.05"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Adapter for Google Elevation external service."
		},
		{
			"name": "User Service",
			"item": [
				{
					"name": "Get all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{user-service-port}}/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{user-service-port}}",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{user-service-port}}/user/:username",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{user-service-port}}",
							"path": [
								"user",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "cassolseba"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"name\": \"Sebastiano\",\n    \"lastName\": \"Cassol\",\n    \"email\": \"sebastiano.cassol@summitfinder.it\",\n    \"password\": \"sde-project-24\",\n    \"admin\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{user-service-port}}/user/new",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{user-service-port}}",
							"path": [
								"user",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"cassolseba\",\n    \"name\": \"Sebastiano\",\n    \"lastName\": \"Cassol\",\n    \"email\": \"sebastiano.cassol@studenti.unitn.it\",\n    \"password\": \"sde-project-24\",\n    \"admin\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{user-service-port}}/user/new",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{user-service-port}}",
							"path": [
								"user",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"cassolseba\",\n    \"name\": \"Sebastiano\",\n    \"lastName\": \"Cassol\",\n    \"email\": \"sebastiano.cassol@gmail.com\",\n    \"password\": \"sde-project-24\",\n    \"admin\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{user-service-port}}/user/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{user-service-port}}",
							"path": [
								"user",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "65d4b225161f05c2cd1ec533"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all users",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{user-service-port}}/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{user-service-port}}",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{user-service-port}}/user/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{user-service-port}}",
							"path": [
								"user",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "65d515868add403f4a49a869"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Adapter service that communicate directly with userdb mongo database."
		},
		{
			"name": "Wishlist Service",
			"item": [
				{
					"name": "Get a wishlist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{wishlist_port}}/wishlist/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{wishlist_port}}",
							"path": [
								"wishlist",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "65ce8e4f4a824a88a086c20c"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get wishlists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{wishlist_port}}/wishlist",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{wishlist_port}}",
							"path": [
								"wishlist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a wish",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{wishlist_port}}/wish/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{wishlist_port}}",
							"path": [
								"wish",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "65d51740f0627df729b53bd7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new to wishlist",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"originLat\": 46.48,\n        \"originLon\": 12.05,\n        \"originName\": \"Feltre\",\n        \"destinationLat\": 46.01,\n        \"destinationLon\": 11.90,\n        \"destinationName\": \"Passo Giau\",\n        \"huts\": [\"Rifugio Dal Piaz\"],\n        \"peaks\": [\"Magheron\"],\n        \"userId\": \"65ce8e4f4a824a88a086c20c\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{wishlist_port}}/wish/new",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{wishlist_port}}",
							"path": [
								"wish",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a wish",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{wishlist_port}}/wish/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{wishlist_port}}",
							"path": [
								"wish",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "65d51740f0627df729b53bd7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a wishlist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{wishlist_port}}/wishlist/:userId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{wishlist_port}}",
							"path": [
								"wishlist",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "65ce8e4f4a824a88a086c20c"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all wishlists",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:{{wishlist_port}}/wishlist",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{wishlist_port}}",
							"path": [
								"wishlist"
							]
						}
					},
					"response": []
				}
			],
			"description": "Adapter service that communicate directly with the wishlistdb mongo database."
		},
		{
			"name": "Authentication Service",
			"item": [
				{
					"name": "Signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set user_token in environment variable\", function () {",
									"  pm.environment.set(\"user_token\", pm.response.json().data.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"cassolseba\",\n    \"password\": \"sde-project-24\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{auth_port}}/auth/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{auth_port}}",
							"path": [
								"auth",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signin as admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set user_token in environment variable\", function () {",
									"  pm.environment.set(\"admin_token\", pm.response.json().data.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"sde-project-24\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{auth_port}}/auth/signin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{auth_port}}",
							"path": [
								"auth",
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signup",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"cassolseba\",\n    \"name\": \"Sebastiano\",\n    \"lastName\": \"Cassol\",\n    \"email\": \"sebastiano.cassol@studenti.unitn.it\",\n    \"password\": \"sde-project-24\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{auth_port}}/auth/signup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{auth_port}}",
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				}
			],
			"description": "Process centric service that communicate with user service and provide authentication using JSON web token."
		},
		{
			"name": "Management Service",
			"item": [
				{
					"name": "Test request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{user_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{management_port}}/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{management_port}}",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all wishlists",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{management_port}}/wishlist/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{management_port}}",
							"path": [
								"wishlist",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a wishlist",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{user_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost::{{management_port}}/wishlist",
							"protocol": "http",
							"host": [
								"localhost:"
							],
							"port": "{{management_port}}",
							"path": [
								"wishlist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new wish to wishlist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{user_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"originLat\": 46.48,\n        \"originLon\": 12.05,\n        \"originName\": \"Feltre\",\n        \"destinationLat\": 46.01,\n        \"destinationLon\": 11.90,\n        \"destinationName\": \"Passo Giau\",\n        \"huts\": [\"Rifugio Dal Piaz\"],\n        \"peaks\": [\"Magheron\"]\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:{{management_port}}/wish",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{management_port}}",
							"path": [
								"wish"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a wish",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{user_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{management_port}}/wish/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{management_port}}",
							"path": [
								"wish",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "65d50af9f0627df729b53bce"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a wishlist",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{user_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:{{management_port}}/wishlist",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{management_port}}",
							"path": [
								"wishlist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all wishlists",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{admin_token}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{user_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:{{management_port}}/wishlist/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{management_port}}",
							"path": [
								"wishlist",
								"all"
							]
						}
					},
					"response": []
				}
			],
			"description": "Process centric service that communicate with wishlist service and provide token validation for user operations."
		},
		{
			"name": "Forecast service",
			"item": [
				{
					"name": "Get forecast for next days",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if there is 40 forecasts\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.forecasts.length).to.eql(40);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{forecast_port}}/forecast/next?lat=46.06&lon=11.72",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{forecast_port}}",
							"path": [
								"forecast",
								"next"
							],
							"query": [
								{
									"key": "lat",
									"value": "46.06"
								},
								{
									"key": "lon",
									"value": "11.72"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get actual weather",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{forecast_port}}/forecast/now?lat=46.06&lon=11.72",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{forecast_port}}",
							"path": [
								"forecast",
								"now"
							],
							"query": [
								{
									"key": "lat",
									"value": "46.06"
								},
								{
									"key": "lon",
									"value": "11.72"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Business logic service that performs data manipulation on responses coming from OpenWeather adapter service."
		},
		{
			"name": "Tour service",
			"item": [
				{
					"name": "Get a tour",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:{{tour_port}}/tour?origin=Trento&destination=Belluno&range=4000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "{{tour_port}}",
							"path": [
								"tour"
							],
							"query": [
								{
									"key": "origin",
									"value": "Trento"
								},
								{
									"key": "destination",
									"value": "Belluno"
								},
								{
									"key": "range",
									"value": "4000"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Process centric services that orchestrates business logic services and adapter to build a unique entity to forward to the frontend application."
		}
	]
}