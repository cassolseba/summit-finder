version: "3.0"

services:
  user_db:
    image: mongo:latest
    restart: always
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$USER_DB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$USER_DB_PASSWORD
    ports:
      - ${USER_DB_HOST_PORT}:${USER_DB_PORT}
    volumes:
      - user_db:/data/db

  user_service:
    depends_on:
      - user_db
    build:
      context: ./data_services/user_service
    restart: always
    env_file: ./.env
    environment:
      - DB_HOST=$USER_DB_HOST
      - DB_USER=$USER_DB_USER
      - DB_PASSWORD=$USER_DB_PASSWORD
      - DB_NAME=$USER_DB_NAME
      - DB_PORT=$USER_DB_PORT
      - AUTHENTICATION_SERVICE_PORT=$AUTHENTICATION_SERVICE_PORT
      - AUTHENTICATION_SERVICE_HOST_PORT=$AUTHENTICATION_SERVICE_HOST_PORT
    ports:
      - ${USER_SERVICE_HOST_PORT}:${USER_SERVICE_PORT}
    stdin_open: true
    tty: true

  nominatim_adapter:
    build:
      context: ./adapter_services/nominatim_adapter
    restart: always
    env_file: ./.env
    environment:
      - TOUR_SERVICE_PORT=$TOUR_SERVICE_PORT
      - TOUR_SERVICE_HOST_PORT=$TOUR_SERVICE_HOST_PORT
    ports:
      - ${NOMINATIM_ADAPTER_HOST_PORT}:${NOMINATIM_ADAPTER_PORT}
    stdin_open: true
    tty: true

  openweather_adapter:
    build:
      context: ./adapter_services/openweather_adapter
    restart: always
    env_file: ./.env
    environment:
      - OPENWEATHER_API_KEY=$OPENWEATHER_API_KEY
      - FORECAST_SERVICE_PORT=$FORECAST_SERVICE_PORT # cors
      - FORECAST_SERVICE_HOST_PORT=$FORECAST_SERVICE_HOST_PORT # cors
    ports:
      - ${OPENWEATHER_ADAPTER_HOST_PORT}:${OPENWEATHER_ADAPTER_PORT}
    stdin_open: true
    tty: true

  overpass_adapter:
    build:
      context: ./adapter_services/overpass_adapter
    restart: always
    env_file: ./.env
    environment:
      - TOUR_SERVICE_PORT=$TOUR_SERVICE_PORT
    ports:
      - ${OVERPASS_ADAPTER_HOST_PORT}:${OVERPASS_ADAPTER_PORT}
    stdin_open: true
    tty: true

  elevation_adapter:
    build:
      context: ./adapter_services/elevation_adapter
    restart: always
    env_file: ./.env
    environment:
      - GOOGLE_ELEVATION_API_KEY=$GOOGLE_ELEVATION_API_KEY
      - TOUR_SERVICE_PORT=$TOUR_SERVICE_PORT # cors
      - TOUR_SERVICE_HOST_PORT=$TOUR_SERVICE_HOST_PORT # cors
    ports:
      - ${ELEVATION_ADAPTER_HOST_PORT}:${ELEVATION_ADAPTER_PORT}
    stdin_open: true
    tty: true

  wishlist_db:
    image: mongo:latest
    restart: always
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$WISHLIST_DB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$WISHLIST_DB_PASSWORD
    ports:
      - ${WISHLIST_DB_HOST_PORT}:${WISHLIST_DB_PORT}
    volumes:
      - wishlist:/data/db

  wishlist_service:
    depends_on:
      - wishlist_db
    build:
      context: ./data_services/wishlist_service
    restart: always
    env_file: ./.env
    environment:
      - DB_HOST=$WISHLIST_DB_HOST
      - DB_USER=$WISHLIST_DB_USER
      - DB_PASSWORD=$WISHLIST_DB_PASSWORD
      - DB_NAME=$WISHLIST_DB_NAME
      - DB_PORT=$WISHLIST_DB_PORT
      - MANAGEMENT_SERVICE_PORT=$MANAGEMENT_SERVICE_PORT # cors
      - MANAGEMENT_SERVICE_HOST_PORT=$MANAGEMENT_SERVICE_HOST_PORT # cors
    ports:
      - ${WISHLIST_SERVICE_HOST_PORT}:${WISHLIST_SERVICE_PORT}
    stdin_open: true
    tty: true

  authentication_service:
    build:
      context: ./process_centric_services/authentication_service
    restart: always
    env_file: ./.env
    environment:
      - JWT_SECRET=$JWT_SECRET
      - FRONTEND_PORT=$FRONTEND_PORT # cors
      - FRONTEND_HOST_PORT=$FRONTEND_HOST_PORT # cors
    ports:
      - ${AUTHENTICATION_SERVICE_HOST_PORT}:${AUTHENTICATION_SERVICE_PORT}
    stdin_open: true
    tty: true

  management_service:
    build:
      context: ./process_centric_services/management_service
    restart: always
    env_file: ./.env
    environment:
      - JWT_SECRET=$JWT_SECRET
      - FRONTEND_PORT=$FRONTEND_PORT # cors
      - FRONTEND_HOST_PORT=$FRONTEND_HOST_PORT # cors
    ports:
      - ${MANAGEMENT_SERVICE_HOST_PORT}:${MANAGEMENT_SERVICE_PORT}
    stdin_open: true
    tty: true

  forecast_service:
    build:
      context: business_logic_services/forecast_service
    restart: always
    env_file: ./.env
    environment:
      - OPENWEATHER_ADAPTER_PORT=$OPENWEATHER_ADAPTER_PORT
      - FRONTEND_PORT=$FRONTEND_PORT # cors
      - FRONTEND_HOST_PORT=$FRONTEND_HOST_PORT # cors
    ports:
      - ${FORECAST_SERVICE_HOST_PORT}:${FORECAST_SERVICE_PORT}
    stdin_open: true
    tty: true

  tour_service:
    build:
      context: process_centric_services/tour_service
    restart: always
    env_file: ./.env
    environment:
      - NOMINATIM_ADAPTER_PORT=$NOMINATIM_ADAPTER_PORT
      - OVERPASS_ADAPTER_PORT=$OVERPASS_ADAPTER_PORT
      - ELEVATION_ADAPTER_PORT=$ELEVATION_ADAPTER_PORT
      - OPENWEATHER_ADAPTER_PORT=$OPENWEATHER_ADAPTER_PORT
      - FRONTEND_PORT=$FRONTEND_PORT # cors
      - FRONTEND_HOST_PORT=$FRONTEND_HOST_PORT # cors
    ports:
      - ${TOUR_SERVICE_HOST_PORT}:${TOUR_SERVICE_PORT}
    stdin_open: true
    tty: true

  frontend:
    build:
      context: frontend/summit-finder
      args:
        - VUE_APP_TOUR_PORT=$TOUR_SERVICE_HOST_PORT
        - VUE_APP_AUTHENTICATION_PORT=$AUTHENTICATION_SERVICE_HOST_PORT
        - VUE_APP_MANAGEMENT_PORT=$MANAGEMENT_SERVICE_HOST_PORT
        - VUE_APP_GOOGLE_MAPS_KEY=$VUE_APP_GOOGLE_MAPS_KEY
    restart: always
    env_file: ./.env
    ports:
      - ${FRONTEND_HOST_PORT}:${FRONTEND_PORT}
    stdin_open: true
    tty: true

volumes:
  user_db:
  wishlist:
